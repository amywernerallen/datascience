xlab("Race & Ethnicity") +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(gender))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
geom_text(aes(label = ..count.., y= ..prop..), stat= "count", vjust = -.5) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
geom_text(aes(label = ..count.., y= ..prop..), stat= "count", vjust = -.5)
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
geom_text(data=pdata, aes(x=raceethnicity)) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
geom_text(data=pdata, aes(x=raceethnicity, y=count)) +
coord_flip()
ggplot(pdata, aes(x=raceethnicity, fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
geom_text(aes(label = ..count.., y= ..prop..), stat= "count", vjust = -.5) +
coord_flip()
ggplot(pdata, aes(x=armed)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
#scale_fill_manual(values=c("#CC3399", "#6699FF")) +
coord_flip()
ggplot(pdata, aes(x=armed, fill=raceethnicity)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
#scale_fill_manual(values=c("#CC3399", "#6699FF")) +
coord_flip()
str(pdata$gender)
pdata$genderN = 1
pdata$genderN[pdata$gender=="male"] = 0
head(pdata)
pdata$genderN = 1
pdata$genderN[pdata$gender=="Male"] = 0
pdata$genderN = 1
pdata$genderN[pdata$gender=="Female"] = 0
head(pdata)
pdata[pdata$genderN==0,]
table(pdata$armed)
pdata$armedN = 1
pdata$armedN[pdata$armed=="No"] = 0
table(pdata$armedN)
1837/(1837+389)
ggplot(pdata, aes(x=month)) +
geom_bar()
str(pdata$month)
as.Date(pdata$month, %b)
as.Date(pdata$month, "%b")
as.Date(pdata$month, "%B")
as.Date(pdata$month)
as.Date(pdata$month, format="%b")
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
guides(fill=guide_legend(title=NULL))
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
guides(fill=FALSE)
factor(pdata$month,levels=month.name)
head(pdata)
pdata$month = factor(pdata$month,levels=month.name)
head(pdata)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
scale_fill_brewer(palette="Set1") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
scale_fill_brewer(palette="PRGn") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
scale_fill_brewer(palette="Set3") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
scale_fill_brewer(palette="Paired") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
scale_fill_brewer(palette="Paired") +
guides(fill=FALSE)
summary(pdata$month)
summary(pdata$armed)
ggplot(pdata, aes(x=armed, fill=raceethnicity)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_brewer(palette="BRBg") +
coord_flip()
ggplot(pdata, aes(x=armed, fill=raceethnicity)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_brewer(palette="BrBg") +
coord_flip()
ggplot(pdata, aes(x=armed, fill=raceethnicity)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_brewer(palette="BrBG") +
coord_flip()
ggplot(pdata, aes(x=state, fill=state)) +
geom_bar() +
xlab("Counts by State") +
scale_fill_brewer(palette="Paired") +
guides(fill=FALSE)
ggplot(pdata, aes(x=state, fill=state)) +
geom_bar() +
xlab("Counts by State") +
guides(fill=FALSE)
lookup = c(MA="East")
lookup[pdata$state]
table(pdata$state)
lookup = c(AK="West", AZ="West", CA="West", CO="West", HI="West", ID="West", MT="West", ND="West", NM="West", NV="West", OR="West", SD="West", UT="West", WA="West", WY="West",
AL="South", AR="South", FL="South", GA="South", KY="South", LA="South", MO="South", MS="South", NC="South", OK="South", SC="South", TN="South", TX="South", WV="South",
CT = "East", DC="East", DE="East", MA="East", MD="East", ME="East", NH="East", NJ="East", NY="East", PA="East", RI="East", VA="East", VT="East",
IA="Midwest", IL="Midwest", IN="Midwest", KS="Midwest", MI="Midwest", MN="Midwest", NE="Midwest", OH="Midwest", WI="Midwest")
lookup[pdata$state]
pdata$Region = lookup[pdata$state]
head(pdata)
table(pdata$Region)
ggplot(pdata, aes(x=Region, fill=state)) +
geom_bar() +
xlab("Counts by State") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Region, fill=factor(state))) +
geom_bar() +
xlab("Counts by State") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Region, fill=factor(state))) +
geom_bar() +
xlab("Counts by State")
ggplot(pdata, aes(x=Region)) +
geom_bar() +
xlab("Counts by State") +
guides(fill=FALSE)
table(pdata$state)
ggplot(pdata, aes(x=Region, fill=Region)) +
geom_bar() +
xlab("Counts by State") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Region, fill=Region)) +
geom_bar() +
xlab("Counts by State") +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Region, fill=Region)) +
geom_bar() +
xlab("Counts by State") +
scale_fill_brewer(palette="PRGn") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Region, fill=Region)) +
geom_bar() +
xlab("Counts by State") +
scale_fill_brewer(palette="PRGn") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_grey(..., start = 0.2, end = 0.8, na.value = "grey50") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_grey(month, start = 0.2, end = 0.8, na.value = "grey50") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_grey(start = 0.2, end = 0.8, na.value = "grey50") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_grey(start = 0.8, end = 0.2) +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_grey() +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_blue() +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_gradient(low="#99FFCC", high="#FFCCFF") +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=month)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_discrete(low="#99FFCC", high="#FFCCFF") +
guides(fill=FALSE)
ggplot(pdata, aes(x=Classification)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
guides(fill=FALSE)
colnames(pdata)
ggplot(pdata, aes(x=classification)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
guides(fill=FALSE)
ggplot(pdata, aes(x=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#6666FF", "#FFCC99")) +
guides(fill=FALSE)
ggplot(pdata, aes(x=classification, fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#6666FF", "#FFCC99")) +
guides(fill=FALSE)
ggplot(pdata, aes(x=classification, fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
table(pdata$classification)
2021/dim(pdata)[1]
table(pdata$lawenforcementagency)
count(pdata, lawenforcementagency)
install.packages("plyr")
library(plyr)
count(pdata, lawenforcementagency)
count(pdata, pdata$lawenforcementagency)
t = table(pdata$lawenforcementagency)
head(t)
str(t)
t = as.data.frame(t)
str(t)
arrange(t, t$Freq)
head(arrange(t, t$Freq))
head(arrange(t, desc(t$Freq)))
head(arrange(t, desc(t$Freq)),10)
t = table(pdata$lawenforcementagency)
t = as.data.frame(t)
colnames(t) = c("Department", "Counts")
head(arrange(t, desc(t$Freq)),10)
t = table(pdata$lawenforcementagency)
t = as.data.frame(t)
colnames(t) = c("Department", "Counts")
head(arrange(t, desc(t$Freq)),10)
t
head(arrange(t, desc(t$Counts)),10)
table(pdata$classification)
pdata$gunshotN = 0
pdata$gunshotN[pdata$classification=="Gunshot"] = 1
table(pdata$gunshotN)
ggplot(pdata, aes(x=month, fill=year)) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=factor(year))) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
guides(fill=FALSE)
ggplot(pdata, aes(x=month, fill=factor(year))) +
geom_bar() +
xlab("Counts by Month") +
theme_bw() +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
guides(fill=FALSE)
pdata_num = pdata[, sapply(pdata, is.numeric)]
head(pdata_num)
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.75, type="upper")
pdata$RegionN = 0
pdata$RegionN[pdata$Region=="West"] = 1
pdata$RegionN[pdata$Region=="MidWest"] = 2
pdata$RegionN[pdata$Region=="South"] = 3
pdata$RegionN[pdata$Region=="East"] = 4
pdata_num = pdata[, sapply(pdata, is.numeric)]
head(pdata_num)
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.75, type="upper")
pdata_num = pdata_num[,-1]
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.75, type="upper")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.75)
corrplot(M, type="upper")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.5)
pdata_num = pdata[, sapply(pdata, is.numeric)]
pdata_num = pdata_num[,c(-1,-3)]
pdata_num
pdata_num = pdata[, sapply(pdata, is.numeric)]
pdata_num = pdata_num[,c(-1,-3,-4)]
head(pdata_num)
pdata_num = pdata[, sapply(pdata, is.numeric)]
pdata_num = pdata_num[,c(-1,-3,-4)]
colnames(pdata_num) = c("Age", "Gender", "Armed", "Gunshot", "Region")
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.5)
pdata_num = pdata[, sapply(pdata, is.numeric)]
pdata_num = pdata_num[,c(-1,-3,-4)]
colnames(pdata_num) = c("Age", "Gender", "Armed", "Gunshot", "Region")
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.5, type="upper")
head(pdata)
logitR = glm(classification ~ age + gender + raceethnicity + armed + state + Region, data = pdata, family = "binomial")
summary(logitR)
logitR = glm(classification ~ age + gender + raceethnicity + armed + Region, data = pdata, family = "binomial")
summary(logitR)
logitR = glm(gunshotN ~ age + gender + raceethnicity + armed + Region, data = pdata, family = "binomial")
summary(logitR)
ggplot(pdata, aes(x=reorder(classification, count), fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(x=reorder(classification, Count), fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(x=classification, fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
scale_x_discrete(limits = classification)+
guides(fill=FALSE)
ggplot(pdata, aes(x=classification, fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
scale_x_discrete(limits = pdata$classification)+
guides(fill=FALSE)
ggplot(pdata, aes(reorder(classification, -count), count)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(reorder(classification, -count), count)) +
geom_bar(stat = "identity") +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
pdata[, .(count = .N), by = .(race)][order(-count)] %>%
>
pdata[, .(count = .N), by = .(race)][order(-count)] %>%
ggplot(pdata, aes(reorder(classification, -count), count)) +
geom_bar(stat = "identity") +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
pdata[, .(count = .N), by = .(classification)][order(-count)] %>%
ggplot(pdata, aes(reorder(classification, -count), count)) +
geom_bar(stat = "identity") +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x))))
}
ggplot(pdata, aes(reorder_size(classification))) +
geom_bar(stat = "identity") +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
reorder_size(pdata$classification)
ggplot(pdata, aes(reorder_size(classification))) +
geom_bar(stat = "identity") +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(reorder_size(classification))) +
geom_bar(stat = "identity")
ggplot(pdata, aes(reorder_size(classification)))
ggplot(pdata, aes(reorder_size(classification))) +
geom_bar()
ggplot(pdata, aes(reorder_size(classification))) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(reorder_size(classification)),fill=raceethnicity) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
ggplot(pdata, aes(reorder_size(raceethnicity), fill=factor(year))) +
geom_bar() +
xlab("Race & Ethnicity") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_manual(values=c("#CC3399", "#6699FF")) +
coord_flip()
ggplot(pdata, aes(reorder_size(armed), fill=raceethnicity)) +
geom_bar() +
xlab("Type of Weapon") +
guides(fill=guide_legend(title=NULL)) +
scale_fill_brewer(palette="BrBG") +
coord_flip()
ggplot(pdata, aes(reorder_size(classification), fill=classification)) +
geom_bar() +
xlab("Counts by Classification") +
theme_bw() +
scale_fill_brewer(palette="BrBG") +
guides(fill=FALSE)
pdata_num = pdata[, sapply(pdata, is.numeric)]
pdata_num = pdata_num[,c(-1,-3,-4)]
colnames(pdata_num) = c("Age", "Gender", "Armed", "Gunshot", "Region")
M = cor(pdata_num, use="pairwise.complete.obs")
corrplot(M, cl.pos="b", tl.pos="d", tl.col = "black", tl.cex=0.5, type="upper")
head(pdata)
install.packages("viridisLite")
install.packages("highcharter")
library("viridisLite")
library(highcharter)
library(ggplot2)
library(dplyr)
library(tidyr)
data("usgeojson")
dshmstops <- data.frame(q = c(0, exp(1:5)/exp(5)),c = substring(viridis(5 + 1, option = "D"), 0, 7)) %>%
list_parse2()
deadly2015 <- read.csv("2015.csv")
deadly2016 <- read.csv("2016.csv")
deadly <- rbind(deadly2015, deadly2016)
